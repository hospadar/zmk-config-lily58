/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/led/led.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

&nice_view_spi { cs-gpios = <&pro_micro 4 GPIO_ACTIVE_HIGH>; };

&left_encoder {
    a-gpios = <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
    b-gpios = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
    steps = <72>;
};

&sensors {
    compatible = "zmk,keymap-sensors";
    sensors = <&left_encoder &right_encoder>;
    triggers-per-rotation = <18>;
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";

        /* SPI */

        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */

        chain-length = <36>; /* number of LEDs */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <
LED_COLOR_ID_GREEN
                          LED_COLOR_ID_RED
                          LED_COLOR_ID_BLU
        >;
    };
};

&pinctrl {
    spi3_default: spi3_default {
        group1 { psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>; };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
            low-power-enable;
        };
    };
};

/ {
    behaviors {
        left_homerow_mod: left_homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOMEROW_MOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 44 45 46 47 48 49 55 56 57 18 30 42 43 44 53 54 55 50 51 52>;
            hold-trigger-on-release;
        };

        right_homerow_mod: right_homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HOMEROW_MOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 43 50 51 52 53 54 54 55 56 57>;
            hold-trigger-on-release;
            flavor = "balanced";
            tapping-term-ms = <500>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
        };

        layer_td_1: layer_td_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TD_1";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&to 1>;
        };

        layer_td_2: layer_td_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TD_2";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&to 2>;
        };

        shift_caps_word: shift_caps_word {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_CAPS_WORD";
            bindings = <&kp>, <&caps_word>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };

        shift_caps_lock: shift_caps_lock {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_CAPS_LOCK";
            bindings = <&kp>, <&kt>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };

        layer_hold: layer_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC                   &kp N1                            &kp N2                        &kp N3                        &kp N4                          &kp N5                                           &kp N6           &kp N7                            &kp N8                          &kp N9                          &kp N0                                 &kp BACKSLASH
&kp TAB                   &kp Q                             &kp W                         &kp E                         &kp R                           &kp T                                            &kp Y            &kp U                             &kp I                           &kp O                           &kp P                                  &kp MINUS
&kp GRAVE                 &left_homerow_mod LEFT_CONTROL A  &left_homerow_mod LEFT_ALT S  &left_homerow_mod LEFT_GUI D  &left_homerow_mod LEFT_SHIFT F  &kp G                                            &kp H            &right_homerow_mod RIGHT_SHIFT J  &right_homerow_mod RIGHT_GUI K  &right_homerow_mod RIGHT_ALT L  &right_homerow_mod RIGHT_CONTROL SEMI  &kp SQT
&shift_caps_word LSHFT 0  &kp Z                             &kp X                         &kp C                         &kp V                           &kp B            &kp C_PLAY_PAUSE    &kp K_MUTE  &kp N            &kp M                             &kp COMMA                       &kp DOT                         &kp FSLH                               &shift_caps_lock RSHFT CAPS
                                                                                          &kp LEFT_GUI                  &kp BACKSPACE                   &layer_hold 1 1  &kp SPACE           &kp RET     &layer_hold 2 2  &kp DELETE                        &kp EQUAL
            >;

            sensor-bindings =
                <&inc_dec_kp PAGE_UP PAGE_DOWN>,
                <&inc_dec_kp RIGHT LEFT_ARROW>;
        };

        grey {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                &trans     &trans        &trans     &trans    &trans    &trans
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                                      &kp F7     &kp F8        &kp F9     &kp F10   &kp F11   &kp F12
&kp GRAVE   &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PRCNT                                   &kp CARET  &kp AMPS      &kp ASTRK  &kp LPAR  &kp RPAR  &kp TILDE
&trans      &trans        &trans        &trans        &trans        &trans        &kp K_PREVIOUS    &kp K_NEXT  &trans     &kp MINUS     &kp PLUS   &kp LBRC  &kp RBRC  &kp PIPE
                                        &trans        &trans        &to 0         &trans            &trans      &to 0      &kp UP_ARROW  &kp DOWN
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        purple {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &kp F1    &kp F2   &kp F3          &kp F4     &kp F5                                &kp F6       &kp F7     &kp F8     &kp F9    &kp F10    &kp F11
&kp GRAVE  &kp N1    &kp N2   &kp N3          &kp N4     &kp N5                                &kp N6       &kp N7     &kp N8     &kp N9    &kp N0     &kp F12
&trans     &trans    &trans   &trans          &trans     &trans                                &trans       &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT  &trans
&trans     &kp HOME  &kp END  &trans          &trans     &trans  &kp K_PREVIOUS    &kp K_NEXT  &kp KP_PLUS  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT   &kp BSLH
                              &kp LEFT_ARROW  &kp RIGHT  &to 0   &trans            &trans      &to 0        &trans     &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp RIGHT LEFT>;
        };
    };
};
